- name: wait until keystone server is available
  wait_for: port=35357 delay=10

- name: Ensure service project is present
  os_project:
    name: "service"
    state: present
    description: "Service Project"
    domain_id: default
    enabled: yes
    auth_type: admin_token
    auth:
      url: "http://{{ controller_ip }}:35357/v3"
      token: "{{ admin_token }}"
  environment:
    OS_IDENTITY_API_VERSION: 3

- name: Ensure demo project is present
  os_project:
    name: "demo"
    state: present
    description: "Demo Project"
    domain_id: default
    enabled: yes
    auth_type: admin_token
    auth:
      url: "http://{{ controller_ip }}:35357/v3"
      token: "{{ admin_token }}"
  environment:
    OS_IDENTITY_API_VERSION: 3

- name: ensure admin role is created
  os_keystone_role: 
    state: present
    name: admin
    auth_type: admin_token
    auth:
      url: "http://{{ controller_ip }}:35357/v3"
      token: "{{ admin_token }}"
  environment:
    OS_IDENTITY_API_VERSION: 3

- name: ensure user role is created
  os_keystone_role: 
    state: present
    name: user
    auth_type: admin_token
    auth:
      url: "http://{{ controller_ip }}:35357/v3"
      token: "{{ admin_token }}"
  environment:
    OS_IDENTITY_API_VERSION: 3

- name: ensure admin user is created
  os_user: 
    state: present
    name: admin
    password: "{{ admin_pass }}"
    domain: default
    default_project: admin
    auth_type: admin_token
    auth:
      url: "http://{{ controller_ip }}:35357/v3"
      token: "{{ admin_token }}"
  environment:
    OS_IDENTITY_API_VERSION: 3

- name: ensure demo user is created
  os_user: 
    state: present
    name: demo
    password: "{{ demo_pass }}"
    domain: default
    default_project: demo
    auth_type: admin_token
    auth:
      url: "http://{{ controller_ip }}:35357/v3"
      token: "{{ admin_token }}"
  environment:
    OS_IDENTITY_API_VERSION: 3

- name: ensure admin user has admin role in admin tenant
  os_user_role: 
    state: present
    user: admin
    role: admin
    project: admin
    auth_type: admin_token
    auth:
      url: "http://{{ controller_ip }}:35357/v3"
      token: "{{ admin_token }}"
  environment:
    OS_IDENTITY_API_VERSION: 3

- name: ensure admin user has user role in admin tenant
  os_user_role: 
    state: present
    user: admin
    role: user
    project: admin
    auth_type: admin_token
    auth:
      url: "http://{{ controller_ip }}:35357/v3"
      token: "{{ admin_token }}"
  environment:
    OS_IDENTITY_API_VERSION: 3

- name: ensure demo user has user role in demo tenant
  os_user_role: 
    state: present
    user: demo
    role: user
    project: demo
    auth_type: admin_token
    auth:
      url: "http://{{ controller_ip }}:35357/v3"
      token: "{{ admin_token }}"
  environment:
    OS_IDENTITY_API_VERSION: 3

# # Services and endpoints using templated.Catalog

# - name: ensure service and endpoints are defined
#   template: >-
#     src=etc/keystone/default_catalog.templates
#     dest=/etc/keystone/default_catalog.templates
#     owner=root
#     group=root
#     mode=0644
#   notify: restart keystone

# - name: ensure users for each of the services are created in tenant service
#   keystone_user: >
#     token={{ admin_token }}
#     user={{ item.name }}
#     tenant=service
#     password="{{ item.password }}"
#   with_items:
#     - { name: 'glance', password: '{{ glance_identity_password }}' }
#     - { name: 'nova', password: '{{ nova_identity_password }}' }
#     - { name: 'ec2', password: '{{ ec2_identity_password }}' }
#     - { name: 'neutron', password: '{{ neutron_identity_password }}' }
#     - { name: 'cinder', password: '{{ cinder_identity_password }}' }
#     - { name: 'heat', password: '{{ heat_identity_password }}' }
#     - { name: 'trove', password: '{{ trove_identity_password }}' }

# - name: ensure admin role is assigned to users for each of the services in tenant service
#   keystone_user: >
#     token={{ admin_token }}
#     role=admin
#     user={{ item.name }}
#     tenant=service
#   with_items:
#     - { name: 'glance' }
#     - { name: 'nova' }
#     - { name: 'ec2' }
#     - { name: 'neutron' }
#     - { name: 'cinder' }
#     - { name: 'heat' }
#     - { name: 'trove' }

- name: ensure openrc (API 2.0) admin file is created in root home directory
  template: >-
    src=root/admin-openrc_2.0
    dest=/root/admin_openrc_2.0
    owner=root
    group=root
    mode=600

- name: ensure openrc (API 3) admin file is created in root home directory
  template: >-
    src=root/admin-openrc
    dest=/root/admin_openrc
    owner=root
    group=root
    mode=600

- name: ensure openrc demo file is created in root home directory
  template: >-
    src=root/demo-openrc
    dest=/root/demo-openrc
    owner=root
    group=root
    mode=600
    